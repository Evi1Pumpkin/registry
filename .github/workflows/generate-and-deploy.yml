# Be aware: This workflow should be kept in sync with generate-and-deploy-with-delete.yml
name: Generate and Sync Files

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: The environment of the Registry
        options:
          - Development
          - Production
      bump-versions-branch:
        type: string
        description: The branch with the modules and providers to publish (if not specified will use the workflow's ref)
        required: false
  workflow_call:
    inputs:
      environment:
        type: string
        description: The environment of the Registry

jobs:
  generate-and-sync:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout branch with modules and providers
        if: inputs.bump-versions-branch != ''
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.bump-versions-branch }}
          path: providers-and-modules

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: './main/src/go.mod'

      - name: Setup dependencies
        run: sudo apt-get install rclone

      - name: Run Generation script
        working-directory: ./main/src
        run: |
          PATH_PREFIX="../../providers-and-modules"
          
          if [ -z "${{ inputs.bump-versions-branch }}" ]; then
            DATA_DIR_FLAGS=""
          else
            DATA_DIR_FLAGS="--module-data $PATH_PREFIX/modules --provider-data $PATH_PREFIX/providers --key-data $PATH_PREFIX/keys"
          fi
          
          go run ./cmd/generate-v1 --destination ../../generated $DATA_DIR_FLAGS
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Sync Data to R2
        run: rclone sync --checkers=512 --transfers=512 --checksum --fast-list --max-delete 0 --delete-after ./generated R2:${{ secrets.R2_BUCKET_NAME }}
        env:
          # R2 credentials should be stored as GitHub secrets
          RCLONE_CONFIG_R2_TYPE: s3
          RCLONE_CONFIG_R2_PROVIDER: Cloudflare
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
